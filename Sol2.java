import java.util.ArrayList;
import java.util.List;

public class Sol2 {

  // Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
  // 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  // By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

  public static void main(String args[]) {
        List<Integer> sumOfFib = new ArrayList<>();
        int first = 0;
        int second = 1;
        int sum = first + second;
        while (sum < 4000000) {
            if (first + second > 4000000) {
                break;
            }
            int placeholder = second;
            second = sum = first + second;
            first = placeholder;
            if (first % 2 == 0) {
                sumOfFib.add(first);
            }
            if (second % 2 == 0) {
                sumOfFib.add(second);
            }
        }
        Integer result = sumOfFib.stream().mapToInt(Integer::intValue).sum();
        System.out.println(result);
    }
}
